{"version":3,"sources":["app.min.js"],"names":["MyApp","angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","controllerAs","service","$http","$window","this","syncMethod","path","window","env","API_URL","console","log","getRooms","get","then","response","data","err","error","getRoom","roomId","createRoom","room","successEvent","post","defaults","headers","common","token","sessionStorage","sendMessage","msg","getUsersForRoom","findUserByName","name","blockUser","userId","put","user","JSON","stringify","unblockUser","getBlockedUsers","setMembership","role","login","failEvent","register","editProfile","editRoom","roomPassword","pw","getSessionToken","getSessionUser","undefined","parse","logout","$scope","$location","ApiService","refreshBlockedUsers","users","blockedUsers","onUnblock","onEdit","setCurrentUser","nickname","currentUser","email","avatar","avatarFileType","_id","$watch","newValue","oldValue","scope","filesize","errormsg","base64","filetype","submit","showAvatar","onSentPassword","getInRoom","rooms","reverse","forEach","messages","attemptRoom","passwordHash","pushRoom","sendPassword","formatDate","date","Date","toLocaleString","chooseRoomColor","index","forbidden","Math","floor","directive","onLoggedIn","onError","ImgService","userLoggedIn","skip","openRooms","r","toString","push","removeRoom","splice","indexOf","showImage","onCreatedRoom","newroom","filter","toggleFilter","onRegister","password","$stateParams","$anchorScroll","refreshMessages","x","moderator","refreshUsers","equals","members","editSuccess","setTimeout","hash","inviteonly","unlisted","autorefresh","setInterval","send","newmsg","changePassword","userToFind","foundUser","setMemberShip","refUsers","$on","clearInterval"],"mappings":"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","file":"app.min.js","sourcesContent":["var MyApp = angular.module(\"MyApp\", [\"ui.router\", \"naif.base64\"]);\n\nMyApp.config([\"$stateProvider\", \"$urlRouterProvider\", function ($stateProvider, $urlRouterProvider) {\n  $urlRouterProvider.otherwise(\"/intro\");\n\n  $stateProvider\n    .state(\"main\", {\n      url: \"/\",\n      templateUrl: \"templates/main/main.html\",\n      controller: \"MainController\",\n      controllerAs: \"main\",\n    })\n    .state(\"main.intro\", {\n      url: \"intro\",\n      templateUrl: \"templates/intro/intro.html\",\n      controller: \"IntroController\",\n      controllerAs: \"intro\"\n    })\n    .state(\"main.room\", {\n      url: \"chatroom/:roomId\",\n      templateUrl: \"templates/room/room.html\",\n      controller: \"RoomController\",\n      controllerAs: \"room\"\n    })\n    .state(\"main.newroom\", {\n      url: \"newroom\",\n      templateUrl: \"templates/newroom/newroom.html\",\n      controller: \"NewRoomController\",\n      controllerAs: \"newroom\"\n    })\n    .state(\"main.login\", {\n      url: \"signin\",\n      templateUrl: \"templates/login/login.html\",\n      controller: \"LoginController\",\n      controllerAs: \"login\"\n    })\n    .state(\"main.register\", {\n      url: \"register\",\n      templateUrl: \"templates/register/register.html\",\n      controller: \"RegisterController\",\n      controllerAs: \"register\"\n    })\n    .state(\"main.edituser\", {\n      url: \"edituser\",\n      templateUrl: \"templates/edituser/edituser.html\",\n      controller: \"EditUserController\",\n      controllerAs: \"edituser\"\n    })\n    .state(\"main.other\", {\n      url: \"other\",\n      templateUrl: \"templates/other/other.html\",\n    });\n}]);\n\nMyApp.service(\"ApiService\", [\"$http\", \"$window\", function ($http, $window) {\n  this.syncMethod = function () {\n    return 0;\n  };\n\n  var path = window.env.API_URL;\n  console.log(path);\n\n  this.getRooms = function () {\n    return $http.get(\"/room\")\n      .then(function (response) {\n        return response.data;\n      })\n      .catch(function (err) {\n        console.error(\"Error ApiService getRooms \", err);\n        return {};\n      });\n  };\n\n  this.getRoom = function (roomId) {\n    return $http.get(\"/room/\" + roomId)\n      .then(function (response) {\n        return response.data;\n      })\n      .catch(function (err) {\n        console.error(\"Error ApiService getRoom \", err);\n        return {};\n      });\n  };\n  \n  this.createRoom = function (room, successEvent) {\n    return $http.post(\"/room\", room)\n      .then (function (response) {\n        $http.defaults.headers.common['X-Access-Token'] = response.data.token;\n        $window.sessionStorage.token = response.data.token;\n        successEvent(response.data);\n      },\n      function (response) {\n        console.error(\"Error room could not be created: \" + response.data)\n      });\n  }\n  \n  this.sendMessage = function (roomId, msg, successEvent) {\n    return $http.post(\"/room/\" + roomId + \"/message\", msg)\n      .then(function (response) {\n        successEvent(response.data);\n      },\n      function (response) {\n        console.error(\"Error message could not be sent: \" + response.data);\n      });\n  };\n\n  this.getUsersForRoom = function (roomId) {\n    return $http.get(\"/room/\" + roomId + \"/member\")\n      .then (function (response) {\n        return response.data;\n      })\n      .catch(function (err) {\n        console.error(\"Error ApiService getUsersForRoom \", err);\n        return {};\n      });\n  };\n  \n  this.findUserByName = function (name) {\n    return $http.get(\"/user/\" + name)\n      .then (function (response) {\n        return response.data;\n      })\n      .catch(function (err) {\n        console.error(\"Error ApiService findUserByName \", err);\n        return {};\n      });\n  };\n  \n  this.blockUser = function (userId, successEvent) {\n    return $http.put(\"/user/\" + userId + \"/block\")\n      .then (function (response) {\n        $http.defaults.headers.common['X-Access-Token'] = response.data.token;\n        $window.sessionStorage.token = response.data.token;\n        $window.sessionStorage.user = JSON.stringify(response.data.user);\n        successEvent(response.data);\n      },\n      function (response) {\n        console.error(\"Error ApiService blockUser \", response.data);\n      });\n  };\n\n  this.unblockUser = function (userId, successEvent) {\n    return $http.put(\"/user/\" + userId + \"/unblock\")\n      .then (function (response) {\n        $http.defaults.headers.common['X-Access-Token'] = response.data.token;\n        $window.sessionStorage.token = response.data.token;\n        $window.sessionStorage.user = JSON.stringify(response.data.user);\n        successEvent(response.data);\n      },\n      function (response) {\n        console.error(\"Error ApiService blockUser \", response.data);\n      });\n  };\n  \n  this.getBlockedUsers = function () {\n    return $http.get(\"/blockedusers\")\n      .then (function (response) {\n        return response.data;\n      })\n      .catch(function (err) {\n        console.error(\"Error ApiService getBlockedUsers \", err);\n        return {};\n      });\n  };\n  \n  this.setMembership = function (userId, roomId, role, successEvent) {\n    return $http.post(\"/room/\" + roomId + \"/member\", {userId: userId, role: role})\n      .then (function (response) {\n        successEvent(response.data);\n      },\n      function (response) {\n        console.error(\"Error ApiService setMembership \", response.data);\n      });\n  };\n  \n  this.login = function (user, successEvent, failEvent) {\n    return $http.post(\"/login\", user)\n      .then(function (response) {\n        $http.defaults.headers.common['X-Access-Token'] = response.data.token;\n        $window.sessionStorage.token = response.data.token;\n        $window.sessionStorage.user = JSON.stringify(response.data.user);\n        successEvent(response.data);\n      },\n      function (response) {\n        failEvent(response.data);\n      });\n  };\n\n  this.register = function (user, successEvent) {\n    return $http.post(\"/user\", user)\n      .then(function (response) {\n        successEvent();\n      },\n      function (response) {\n        console.error(\"Error ApiService register: \" + response.data);\n      });\n  };\n  \n  this.editProfile = function(user, successEvent) {\n    return $http.put(\"/user\", user)\n      .then(function (response) {\n        $window.sessionStorage.user = JSON.stringify(user);\n        successEvent(user);\n      },\n      function (response) {\n        console.error(\"Error ApiService editProfile: \" + response.data);\n      });\n  };\n  \n  this.editRoom = function(roomId, room, successEvent) {\n    return $http.put(\"/room/\" + roomId, room)\n      .then(function (response) {\n        successEvent(room);\n      },\n      function (response) {\n        console.error(\"Error ApiService editRoom: \" + response.data);\n      });\n  };\n\n  this.roomPassword = function (roomId, pw, successEvent) {\n    return $http.post(\"/room/\" + roomId, pw)\n      .then(function (response) {\n        $http.defaults.headers.common['X-Access-Token'] = response.data.token;\n        $window.sessionStorage.token = response.data.token;\n        successEvent(response.data);\n      },\n      function (response) {\n        console.error(\"Error password could not be sent: \" + response.data);\n      });\n  };\n  \n  this.getSessionToken = function () {\n    $http.defaults.headers.common['X-Access-Token'] = $window.sessionStorage.token;\n  };\n  \n  this.getSessionUser = function() {\n    var user = $window.sessionStorage.user;\n    if (user == undefined || user == \"undefined\" || user == null)\n      return undefined;\n    return JSON.parse($window.sessionStorage.user);\n  };\n  \n  this.logout = function() {\n    delete $http.defaults.headers.common['X-Access-Token'];\n    delete $window.sessionStorage.token;\n    delete $window.sessionStorage.user;\n  };\n}]);\n\nMyApp.controller(\"EditUserController\", [\"$scope\", \"$location\", \"ApiService\", function ($scope, $location, ApiService) {\n  $scope.blockedUsers = [];\n  refreshBlockedUsers();\n  $scope.user = {\n    nickname: $scope.currentUser.nickname,\n    email: $scope.currentUser.email,\n    avatar: $scope.currentUser.avatar,\n    avatarFileType: $scope.currentUser.avatarFileType,\n  };\n  \n  function refreshBlockedUsers()\n  {\n    ApiService.getBlockedUsers()\n    .then(function(users) {\n      $scope.blockedUsers = users;\n    });\n  }\n  \n  $scope.unblockUser = function(user) {\n    ApiService.unblockUser(user._id, onUnblock);\n  };\n  \n  function onUnblock(data)\n  {\n    refreshBlockedUsers();\n  }\n\n  $scope.$watch('avatar', function (newValue, oldValue, scope) {\n    if (newValue.filesize > 500000) {\n      scope.avatar = {};\n      scope.errormsg = \"Avatar too big\";\n    } else {\n      scope.user.avatar = newValue.base64;\n      scope.user.avatarFileType = newValue.filetype;\n    }\n  });\n  \n  $scope.submit = function() {\n    ApiService.editProfile($scope.user, onEdit);\n  };\n  \n  function onEdit(data) {\n    $scope.setCurrentUser(data);\n    $location.path(\"/intro\");\n  }\n}]);\n\nMyApp.service(\"ImgService\", function () {\r\n  this.showAvatar = function(user) {\r\n    if (user.avatar == \"\" || user.avatar == undefined)\r\n      return \"img/noavatar.png\";\r\n    return \"data:\" + user.avatarFileType + \";base64,\" + user.avatar;\r\n  };\r\n});\r\n\nMyApp.controller(\"IntroController\", [\"$scope\", \"$location\", \"ApiService\", function ($scope, $location, ApiService) {\n  ApiService.getRooms()\n  .then(function(data) {\n    $scope.rooms = data;\n    $scope.rooms.reverse();\n    $scope.rooms.forEach(function (room) {\n      room.messages.reverse();\n    });\n  });\n  $scope.attemptRoom = function(room) {\n    console.log(room.passwordHash);\n  };\n  $scope.getInRoom = function(room) {\n    $scope.pushRoom(room);\n    $location.path(\"/chatroom/\" + room._id);\n  };\n  $scope.sendPassword = function(room) {\n    ApiService.roomPassword(room._id, {roomPassword: room.roomPassword}, onSentPassword);\n  };\n  \n  function onSentPassword(data) {\n    $scope.getInRoom(data.room);\n  }\n  \n  $scope.formatDate = function(date) {\n    return new Date(date).toLocaleString();\n  };\n\n  $scope.chooseRoomColor = function(room, index) {\n    if (room.forbidden)\n      return \"disabled\";\n    if (Math.floor(index / 4) % 2 == 0) {\n      if (index % 2 == 0) return \"room1\";\n      return \"room2\";\n    }\n    if (index % 2 == 0) return \"room2\";\n    return \"room1\";\n  };\n}]);\n\nMyApp.directive(\"navTop\", function () {\n  return {\n    templateUrl: \"templates/layout-directives/nav-top2.html\",\n  };\n});\n\nMyApp.controller(\"LoginController\", [\"$scope\", \"$location\", \"ApiService\", function ($scope, $location, ApiService) {\n  $scope.submit = function() {\n    ApiService.login($scope.user, onLoggedIn, onError);\n  }\n  \n  function onLoggedIn(data) {\n    $scope.setCurrentUser(data.user);\n    $location.path(\"/intro\");\n  }\n  \n  function onError(err) {\n    console.error(\"Error could not login: \" + err);\n  }\n}]);\n\nMyApp.controller(\"MainController\", [\"$scope\", \"ApiService\", \"ImgService\", function ($scope, ApiService, ImgService) {\n  ApiService.getSessionToken();\n  $scope.setCurrentUser = function(user) {\n    $scope.currentUser = user;\n  };\n  $scope.setCurrentUser(ApiService.getSessionUser());\n  $scope.userLoggedIn = function() {\n    return ApiService.getSessionUser() != undefined;\n  };\n  $scope.pushRoom = function(room) {\n    var skip = false;\n    $scope.openRooms.forEach(function (r) {\n      if (r._id.toString() == room._id.toString())\n        skip = true;\n    });\n    if (!skip)\n      $scope.openRooms.push(room);\n  };\n  $scope.removeRoom = function(room) {\n    $scope.openRooms.splice($scope.openRooms.indexOf(room), 1);\n  };\n  $scope.openRooms = [];\n  $scope.showImage = function(user) {\n    return ImgService.showAvatar(user);\n  };\n  $scope.logout = function() {\n    ApiService.logout();\n    $scope.setCurrentUser(undefined);\n  };\n}]);\n\nMyApp.controller(\"NewRoomController\", [\"$scope\", \"$location\", \"ApiService\", function ($scope, $location, ApiService) {\n  $scope.createRoom = function() {\n    ApiService.createRoom($scope.newroom, onCreatedRoom);\n  };\n  \n  function onCreatedRoom(data) {\n    $location.path(\"/room/\" + data.room._id);\n  }\n}]);\n\nMyApp.controller(\"OtherController\", [\"$scope\", function ($scope) {\n  $scope.filter = true;\n  $scope.toggleFilter = function () {\n    $scope.filter = !$scope.filter;\n  };\n}]);\n\nMyApp.controller(\"RegisterController\", [\"$scope\", \"$location\", \"ApiService\", function ($scope, $location, ApiService) {\n  $scope.user = {\n    nickname: \"\",\n    email: \"\",\n    password: \"\",\n    role: \"user\",\n    avatar: \"\",\n    avatarFileType: \"\"\n  };\n  \n  $scope.avatar = {};\n  $scope.$watch('avatar', function (newValue, oldValue, scope) {\n    if (newValue.filesize > 500000) {\n      scope.avatar = {};\n      scope.errormsg = \"Avatar too big\";\n    } else {\n      scope.user.avatar = newValue.base64;\n      scope.user.avatarFileType = newValue.filetype;\n    }\n  });\n  \n  $scope.submit = function() {\n    ApiService.register($scope.user, onRegister);\n  };\n  \n  function onRegister() {\n    $location.path(\"/login\");\n  }\n}]);\n\nMyApp.controller(\"RoomController\", [\"$scope\", \"$stateParams\", \"$location\", \"$anchorScroll\", \"ApiService\", function ($scope, $stateParams, $location, $anchorScroll, ApiService) {\n  function refreshMessages(x) {\n    ApiService.getRoom($stateParams.roomId)\n    .then(function(data) {\n      $scope.room = data.room;\n      $scope.messages = data.room.messages;\n      $scope.moderator = data.moderator;\n      $scope.messages.reverse();\n    });\n  }\n  \n  function refreshUsers(x) {\n    if (angular.equals($scope.currentUser, {}) || !$scope.moderator) {\n      return;\n    }\n    ApiService.getUsersForRoom($stateParams.roomId)\n    .then(function(data) {\n      $scope.members = data;\n    });\n  }\n\n  refreshMessages({});\n  setTimeout(function() {\n    $location.hash(\"sendbtn\");\n    $anchorScroll();  \n    $scope.newroom = {\n      name: $scope.room.name,\n      inviteonly: $scope.room.inviteonly,\n      unlisted: $scope.room.unlisted\n    };\n  }, 1000);\n  var autorefresh = setInterval(refreshMessages, 1000);\n  $scope.editSuccess = false;\n\n  $scope.send = function() {\n    ApiService.sendMessage($stateParams.roomId, $scope.newmsg, refreshMessages);\n    setTimeout(function() {\n      $location.hash(\"sendbtn\");\n      $anchorScroll();    \n    }, 1000);\n    $scope.newmsg = \"\";\n  };\n\n  $scope.editRoom = function() {\n    $scope.editSuccess = false;\n    if ($scope.changePassword) {\n      if ($scope.newroom == undefined || $scope.newroom.password == undefined)\n        $scope.newroom.password = \"\";\n    } else {\n      delete $scope.newroom.password;\n    }\n    ApiService.editRoom($stateParams.roomId, $scope.newroom, onEdit);\n  };\n  \n  function onEdit(x) {\n    $scope.editSuccess = true;\n    setTimeout(function(){$scope.editSuccess = false;}, 5000)\n    refreshMessages({});\n  }\n  \n  $scope.findUserByName = function() {\n    ApiService.findUserByName($scope.userToFind)\n    .then(function(data) {\n      $scope.foundUser = data;\n    });\n  };\n  \n  $scope.blockUser = function(userId) {\n    ApiService.blockUser(userId, refreshMessages);\n  };\n    \n  $scope.setMemberShip = function(user, role) {\n    ApiService.setMembership(user._id, $stateParams.roomId, role, refreshUsers);\n  };\n  \n  $scope.refUsers = function() {\n    refreshUsers({});\n  };\n  \n  $scope.formatDate = function(date) {\n    return new Date(date).toLocaleString();\n  };\n  \n  $scope.$on(\"$destroy\", function(){\n    clearInterval(autorefresh);\n  });\n}]);\n"]}